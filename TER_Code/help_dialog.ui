<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Help_dialog</class>
 <widget class="QDialog" name="Help_dialog">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>848</width>
    <height>441</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Help</string>
  </property>
  <layout class="QHBoxLayout" name="horizontalLayout">
   <item>
    <widget class="QTextBrowser" name="textBrowser">
     <property name="html">
      <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:15pt; color:#0000ff;&quot;&gt;Introduction:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:10pt; color:#000000;&quot;&gt;This application is made to convert Deterministic Finite State Automata (DFSA) from various applications to an equivalent regular language. Automata can be modified before generating the language. The language will not be automatically generated.&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:15pt; color:#0000ff;&quot;&gt;Qhick start:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:10pt; color:#000000;&quot;&gt;- The first thing to do is either create a new automaton group or import an outside file.&lt;br /&gt;- If a new automaton was created, fill its informations, otherwise, if an automaton already exist you can ensure all informations are correct.&lt;br /&gt;- Once the automaton's infrmations are completed, checkboxes allow to ignore uncotrolable and/or unobservable events and demand a reducted language.&lt;br /&gt;- The language can now be generated. By default, the software will use a method called 'Brzozowski method' to convert from automaton to language, but other can be selected in the 'Tool' menu. The generated language can be selected and copy/pasted manualy or saved in a text file.&lt;br /&gt;- The automaton can be saved in the same format as it have been loaded or exported for compatibility with other software, in which case some data loss can be expected. If there is multiple automata in the group, they will all be saved at the same time.&lt;br /&gt;Warning: some software recognise only one automaton per file. If the current group contains multiple automata, they will be saved not in the same file but in the same folder.&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:15pt; color:#0000ff;&quot;&gt;In-depth Desciption:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:10pt; color:#000000;&quot;&gt;The window is separated in five sections :&lt;br /&gt;- Automata: automata are stored in groups to allow easy access to their data. When loading a file the first automaton will be selected and its information displayed in the other three sections. A simple clic on an automaton will display the informations of the selected automaton. Automata can also be renamed via a double clic on them.&lt;br /&gt;- States: states of the current automaton will be displayed in this section. First is the name, then checkboxes displaying whether this state is initial, accepting, neither or both. The names can be changed but verifications are enforced so that there can't be a state with the same name as another state or as an event. The checkboxes can be checked or unchecked at will.&lt;br /&gt;- Events: Events of the current automaton will be displayed in this section. First is the name, then then checkboxes displaying whether this event is whether unobservable, uncontrolable, neither or both. The names can be changed but verifications are enforced so that there can't be a state with the same name as another event or as a state. The checkboxes can be checked or unchecked at will.&lt;br /&gt;- Transitions: Transitions of the current automaton will be displayed in this section. Every inforation is mandatory: when editing transitions, no information may be leaved blank and each must be an already existing state (for source and destination) or event.&lt;br /&gt;- Bottom section: the last section is where the generated language will be displayed. It is not possible to write in it but text can be selected.&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:15pt; color:#0000ff;&quot;&gt;Menus:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:10pt; color:#000000;&quot;&gt;- Edit:&lt;br /&gt;The 'Add' menu allows the creation of new elements. A new automaton require just a name. A new state require a name and can be marked as initial and/or accepting. A new event require a name and can ba marked as unobservable and/or uncontrolable. A new transition require a source state, a destination state and an event, all needs to already exist in the automaton, an auto-completer is avaiable to reduce the possibility of misspelling.&lt;br /&gt;The 'Delete' menu allows the deletion of elements or whole automata. Deleting an automaton will erase all information within it. Deleting a state or an event will also delete all transitions using the deleted element. Deleting a transition will not delete anything else.&lt;br /&gt;- Tool:&lt;br /&gt;- Generate all languages: this option will generate the language for all automata in the group and save them in a designated file.&lt;br /&gt;- Avoid language ambiguity: this option will modify how the language is displayed by separating every consecuting event with a '.'. For example, with the events 'u', '0' and 'u0', the language 'u0u0u0+u+0' would becone 'u.0.u0.u.0+u+0', preventing ambiguity when reading the language. This option must be selected before generating the language.&lt;br /&gt;- Convertion method: the software offer various ways to obtain a language. Since there isn't a solution better in every cases, trying differents solutions may help, both in result quality and time needed. The Brzozowski method is good for small to medium problem, the second version being a bit slower but more efficient. The reverse Brzozowski is slower and less efficient than the basic Brzozowski but the generated languages tend to be shorter.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
